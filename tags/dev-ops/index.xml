<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dev-ops on Miro Sopanen</title><link>https://sopanen.net/tags/dev-ops/</link><description>Recent content in dev-ops on Miro Sopanen</description><generator>Hugo -- gohugo.io</generator><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 22 Nov 2020 06:27:18 +0100</lastBuildDate><atom:link href="https://sopanen.net/tags/dev-ops/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Traefik as Ingress Controller on a Kubernetes cluster with cert-manager | Part 2</title><link>https://sopanen.net/posts/using-traefik-as-ingress-controller-on-a-kubernetes-cluster-with-cert-manager-part-2/</link><pubDate>Sun, 22 Nov 2020 06:27:18 +0100</pubDate><guid>https://sopanen.net/posts/using-traefik-as-ingress-controller-on-a-kubernetes-cluster-with-cert-manager-part-2/</guid><description>Introduction ðŸ“Œ This is Part 2 of the Kubernetes blog series. In this part, we will deploy and expose the Traefik dashboard to a custom domain. As a bonus, we will deploy a small example application as well.
The domains will be pointed to our external load balancer and we will secure them with Let&amp;rsquo;s Encrypt through cert-manager.
To follow along with this part, please follow Part 1 first.
With that being said, let&amp;rsquo;s deploy some services to our shiny new Kubernetes cluster!</description></item><item><title>Kubernetes with Terraform &amp; Traefik V2 + cert-manager | Part 1</title><link>https://sopanen.net/posts/kubernetes-with-terraform-traefik-v2-cert-manager-part-1/</link><pubDate>Sat, 21 Nov 2020 06:28:07 +0100</pubDate><guid>https://sopanen.net/posts/kubernetes-with-terraform-traefik-v2-cert-manager-part-1/</guid><description>Introduction ðŸ“Œ Today we are setting up a managed Kubernetes cluster &amp;amp; load balancer on DigitalOcean using Terraform. Our cluster will be powered with Traefik v2 as our Ingress controller and cert-manager to provide us with free Let&amp;rsquo;s Encrypt certificates.
Woaw. That&amp;rsquo;s a mouth full. Well don&amp;rsquo;t worry, it sounds more difficult than it actually is!
In this part, we&amp;rsquo;ll go over the Kubernetes set-up first, and then in Part 2 we will do the deployments.</description></item></channel></rss>